{
  "address": "0x1D3EDBa836caB11C26A186873abf0fFeB8bbaE63",
  "abi": [
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "swapExactInputMultihop",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInMaximum",
          "type": "uint256"
        }
      ],
      "name": "swapExactOutputMultihop",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd3da98e82a2ae30e74c5bac2c2e63ba14c6979a855cd7aa332a2255a7c6cb12d",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x1D3EDBa836caB11C26A186873abf0fFeB8bbaE63",
    "transactionIndex": 0,
    "gasUsed": "890100",
    "logsBloom": "0x
    "blockHash": "0xd489ba5acea05a7a5754a956dc3967156bb8d87ede5d8f4296f375658843f322",
    "transactionHash": "0xd3da98e82a2ae30e74c5bac2c2e63ba14c6979a855cd7aa332a2255a7c6cb12d",
    "logs": [],
    "blockNumber": 16365712,
    "cumulativeGasUsed": "890100",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0452c48c4a4fd9498d30c7a1310db879",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExactInputMultihop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"name\":\"swapExactOutputMultihop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapMultiHop.sol\":\"SwapMultiHop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.6.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nlibrary TransferHelper {\\n    /// @notice Transfers tokens from the targeted address to the given destination\\n    /// @notice Errors with 'STF' if transfer fails\\n    /// @param token The contract address of the token to be transferred\\n    /// @param from The originating address from which the tokens will be transferred\\n    /// @param to The destination address of the transfer\\n    /// @param value The amount to be transferred\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) =\\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\\n    }\\n\\n    /// @notice Transfers tokens from msg.sender to a recipient\\n    /// @dev Errors with ST if transfer fails\\n    /// @param token The contract address of the token which will be transferred\\n    /// @param to The recipient of the transfer\\n    /// @param value The value of the transfer\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\\n    }\\n\\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\\n    /// @dev Errors with 'SA' if transfer fails\\n    /// @param token The contract address of the token to be approved\\n    /// @param to The target of the approval\\n    /// @param value The amount of the given token the target will be allowed to spend\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\\n    }\\n\\n    /// @notice Transfers ETH to the recipient address\\n    /// @dev Fails with `STE`\\n    /// @param to The destination of the transfer\\n    /// @param value The value to be transferred\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'STE');\\n    }\\n}\\n\",\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/SwapMultiHop.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.0 < 0.9.0;\\npragma abicoder v2;\\n\\nimport \\\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\\\";\\n\\n\\ncontract SwapMultiHop{\\n        ISwapRouter public constant swapRouter =\\n        ISwapRouter(0xE592427A0AEce92De3Edee1F18E0157C05861564);\\n\\n    address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\\n    address public constant token0 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\n    address public constant token1 = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\\n\\n    function swapExactInputMultihop(uint amountIn) external returns (uint amountOut){\\n        TransferHelper.safeTransferFrom(token0, msg.sender, address(this), amountIn);\\n\\n        TransferHelper.safeApprove(token0, address(swapRouter), amountIn);\\n\\n        ISwapRouter.ExactInputParams memory params = ISwapRouter.ExactInputParams({\\n            path: abi.encodePacked(\\n                token0,\\n                uint24(3000),\\n                token1,\\n                uint24(100),\\n                DAI\\n            ),\\n            recipient: msg.sender,\\n            deadline: block.timestamp,\\n            amountIn: amountIn,\\n            amountOutMinimum: 0\\n        });\\n        amountOut = swapRouter.exactInput(params);\\n    }\\n\\n     function swapExactOutputMultihop(uint amountOut, uint amountInMaximum) external returns (uint amountIn){\\n        TransferHelper.safeTransferFrom(token0, msg.sender, address(this), amountInMaximum);\\n\\n        TransferHelper.safeApprove(token0, address(swapRouter), amountInMaximum);\\n\\n        ISwapRouter.ExactOutputParams memory params = ISwapRouter.ExactOutputParams({\\n            path: abi.encodePacked(\\n                DAI,\\n                uint24(100),\\n                token1,\\n                uint24(3000),\\n                token0\\n            ),\\n            recipient: msg.sender,\\n            deadline: block.timestamp,\\n            amountOut: amountOut,\\n            amountInMaximum: amountInMaximum\\n        });\\n\\n        amountIn = swapRouter.exactOutput(params);\\n\\n        if(amountIn < amountInMaximum){\\n            TransferHelper.safeApprove(token0, address(swapRouter), 0);\\n            TransferHelper.safeTransferFrom(token0, address(this), msg.sender, amountInMaximum - amountIn);\\n        }\\n    }\\n\\n\\n}\",\"keccak256\":\"0x563ac0a3cc5d66169bdbbd2f916f2de0ea2bdb8ec8bb99f6d8ba1bb80c1bf7f7\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610f2c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630dfe1681146100675780633b85cf6a14610085578063c31c9c07146100b5578063d21220a7146100d3578063e0bab4c4146100f1578063edd835571461010f575b600080fd5b61006f61013f565b60405161007c919061081f565b60405180910390f35b61009f600480360381019061009a9190610875565b610157565b6040516100ac91906108c4565b60405180910390f35b6100bd610354565b6040516100ca919061093e565b60405180910390f35b6100db61036c565b6040516100e8919061081f565b60405180910390f35b6100f9610384565b604051610106919061081f565b60405180910390f35b61012960048036038101906101249190610959565b61039c565b60405161013691906108c4565b60405180910390f35b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b600061017973c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2333085610531565b6101ac73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c0586156484610689565b60006040518060a00160405280736b175474e89094c44da98b954eedeac495271d0f606473a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48610bb873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2604051602001610211959493929190610a13565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200185815260200184815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663f28c0498826040518263ffffffff1660e01b81526004016102a09190610b96565b6020604051808303816000875af11580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e39190610bcd565b91508282101561034d5761032173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c058615646000610689565b61034c73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2303385876103479190610c29565b610531565b5b5092915050565b73e592427a0aece92de3edee1f18e0157c0586156481565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b736b175474e89094c44da98b954eedeac495271d0f81565b60006103be73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2333085610531565b6103f173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c0586156484610689565b60006040518060a0016040528073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2610bb873a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486064736b175474e89094c44da98b954eedeac495271d0f604051602001610456959493929190610a13565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481526020016000815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663c04b8d59826040518263ffffffff1660e01b81526004016104e69190610cd3565b6020604051808303816000875af1158015610505573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105299190610bcd565b915050919050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161056893929190610cf5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105d29190610d68565b6000604051808303816000865af19150503d806000811461060f576040519150601f19603f3d011682016040523d82523d6000602084013e610614565b606091505b509150915081801561064257506000815114806106415750808060200190518101906106409190610db7565b5b5b610681576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067890610e41565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016106be929190610e61565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107289190610d68565b6000604051808303816000865af19150503d8060008114610765576040519150601f19603f3d011682016040523d82523d6000602084013e61076a565b606091505b509150915081801561079857506000815114806107975750808060200190518101906107969190610db7565b5b5b6107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ce90610ed6565b60405180910390fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610809826107de565b9050919050565b610819816107fe565b82525050565b60006020820190506108346000830184610810565b92915050565b600080fd5b6000819050919050565b6108528161083f565b811461085d57600080fd5b50565b60008135905061086f81610849565b92915050565b6000806040838503121561088c5761088b61083a565b5b600061089a85828601610860565b92505060206108ab85828601610860565b9150509250929050565b6108be8161083f565b82525050565b60006020820190506108d960008301846108b5565b92915050565b6000819050919050565b60006109046108ff6108fa846107de565b6108df565b6107de565b9050919050565b6000610916826108e9565b9050919050565b60006109288261090b565b9050919050565b6109388161091d565b82525050565b6000602082019050610953600083018461092f565b92915050565b60006020828403121561096f5761096e61083a565b5b600061097d84828501610860565b91505092915050565b60008160601b9050919050565b600061099e82610986565b9050919050565b60006109b082610993565b9050919050565b6109c86109c3826107fe565b6109a5565b82525050565b600062ffffff82169050919050565b60008160e81b9050919050565b60006109f5826109dd565b9050919050565b610a0d610a08826109ce565b6109ea565b82525050565b6000610a1f82886109b7565b601482019150610a2f82876109fc565b600382019150610a3f82866109b7565b601482019150610a4f82856109fc565b600382019150610a5f82846109b7565b6014820191508190509695505050505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aac578082015181840152602081019050610a91565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ad482610a72565b610ade8185610a7d565b9350610aee818560208601610a8e565b610af781610ab8565b840191505092915050565b610b0b816107fe565b82525050565b610b1a8161083f565b82525050565b600060a0830160008301518482036000860152610b3d8282610ac9565b9150506020830151610b526020860182610b02565b506040830151610b656040860182610b11565b506060830151610b786060860182610b11565b506080830151610b8b6080860182610b11565b508091505092915050565b60006020820190508181036000830152610bb08184610b20565b905092915050565b600081519050610bc781610849565b92915050565b600060208284031215610be357610be261083a565b5b6000610bf184828501610bb8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c348261083f565b9150610c3f8361083f565b9250828203905081811115610c5757610c56610bfa565b5b92915050565b600060a0830160008301518482036000860152610c7a8282610ac9565b9150506020830151610c8f6020860182610b02565b506040830151610ca26040860182610b11565b506060830151610cb56060860182610b11565b506080830151610cc86080860182610b11565b508091505092915050565b60006020820190508181036000830152610ced8184610c5d565b905092915050565b6000606082019050610d0a6000830186610810565b610d176020830185610810565b610d2460408301846108b5565b949350505050565b600081905092915050565b6000610d4282610a72565b610d4c8185610d2c565b9350610d5c818560208601610a8e565b80840191505092915050565b6000610d748284610d37565b915081905092915050565b60008115159050919050565b610d9481610d7f565b8114610d9f57600080fd5b50565b600081519050610db181610d8b565b92915050565b600060208284031215610dcd57610dcc61083a565b5b6000610ddb84828501610da2565b91505092915050565b600082825260208201905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b6000610e2b600383610de4565b9150610e3682610df5565b602082019050919050565b60006020820190508181036000830152610e5a81610e1e565b9050919050565b6000604082019050610e766000830185610810565b610e8360208301846108b5565b9392505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b6000610ec0600283610de4565b9150610ecb82610e8a565b602082019050919050565b60006020820190508181036000830152610eef81610eb3565b905091905056fea26469706673582212206be1382ae6a531566c16f25648f2859379fa56894becbafd0a8c24ecbad6a32d64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630dfe1681146100675780633b85cf6a14610085578063c31c9c07146100b5578063d21220a7146100d3578063e0bab4c4146100f1578063edd835571461010f575b600080fd5b61006f61013f565b60405161007c919061081f565b60405180910390f35b61009f600480360381019061009a9190610875565b610157565b6040516100ac91906108c4565b60405180910390f35b6100bd610354565b6040516100ca919061093e565b60405180910390f35b6100db61036c565b6040516100e8919061081f565b60405180910390f35b6100f9610384565b604051610106919061081f565b60405180910390f35b61012960048036038101906101249190610959565b61039c565b60405161013691906108c4565b60405180910390f35b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b600061017973c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2333085610531565b6101ac73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c0586156484610689565b60006040518060a00160405280736b175474e89094c44da98b954eedeac495271d0f606473a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48610bb873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2604051602001610211959493929190610a13565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200185815260200184815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663f28c0498826040518263ffffffff1660e01b81526004016102a09190610b96565b6020604051808303816000875af11580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e39190610bcd565b91508282101561034d5761032173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c058615646000610689565b61034c73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2303385876103479190610c29565b610531565b5b5092915050565b73e592427a0aece92de3edee1f18e0157c0586156481565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b736b175474e89094c44da98b954eedeac495271d0f81565b60006103be73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2333085610531565b6103f173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c0586156484610689565b60006040518060a0016040528073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2610bb873a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486064736b175474e89094c44da98b954eedeac495271d0f604051602001610456959493929190610a13565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481526020016000815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663c04b8d59826040518263ffffffff1660e01b81526004016104e69190610cd3565b6020604051808303816000875af1158015610505573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105299190610bcd565b915050919050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161056893929190610cf5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105d29190610d68565b6000604051808303816000865af19150503d806000811461060f576040519150601f19603f3d011682016040523d82523d6000602084013e610614565b606091505b509150915081801561064257506000815114806106415750808060200190518101906106409190610db7565b5b5b610681576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067890610e41565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016106be929190610e61565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107289190610d68565b6000604051808303816000865af19150503d8060008114610765576040519150601f19603f3d011682016040523d82523d6000602084013e61076a565b606091505b509150915081801561079857506000815114806107975750808060200190518101906107969190610db7565b5b5b6107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ce90610ed6565b60405180910390fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610809826107de565b9050919050565b610819816107fe565b82525050565b60006020820190506108346000830184610810565b92915050565b600080fd5b6000819050919050565b6108528161083f565b811461085d57600080fd5b50565b60008135905061086f81610849565b92915050565b6000806040838503121561088c5761088b61083a565b5b600061089a85828601610860565b92505060206108ab85828601610860565b9150509250929050565b6108be8161083f565b82525050565b60006020820190506108d960008301846108b5565b92915050565b6000819050919050565b60006109046108ff6108fa846107de565b6108df565b6107de565b9050919050565b6000610916826108e9565b9050919050565b60006109288261090b565b9050919050565b6109388161091d565b82525050565b6000602082019050610953600083018461092f565b92915050565b60006020828403121561096f5761096e61083a565b5b600061097d84828501610860565b91505092915050565b60008160601b9050919050565b600061099e82610986565b9050919050565b60006109b082610993565b9050919050565b6109c86109c3826107fe565b6109a5565b82525050565b600062ffffff82169050919050565b60008160e81b9050919050565b60006109f5826109dd565b9050919050565b610a0d610a08826109ce565b6109ea565b82525050565b6000610a1f82886109b7565b601482019150610a2f82876109fc565b600382019150610a3f82866109b7565b601482019150610a4f82856109fc565b600382019150610a5f82846109b7565b6014820191508190509695505050505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aac578082015181840152602081019050610a91565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ad482610a72565b610ade8185610a7d565b9350610aee818560208601610a8e565b610af781610ab8565b840191505092915050565b610b0b816107fe565b82525050565b610b1a8161083f565b82525050565b600060a0830160008301518482036000860152610b3d8282610ac9565b9150506020830151610b526020860182610b02565b506040830151610b656040860182610b11565b506060830151610b786060860182610b11565b506080830151610b8b6080860182610b11565b508091505092915050565b60006020820190508181036000830152610bb08184610b20565b905092915050565b600081519050610bc781610849565b92915050565b600060208284031215610be357610be261083a565b5b6000610bf184828501610bb8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c348261083f565b9150610c3f8361083f565b9250828203905081811115610c5757610c56610bfa565b5b92915050565b600060a0830160008301518482036000860152610c7a8282610ac9565b9150506020830151610c8f6020860182610b02565b506040830151610ca26040860182610b11565b506060830151610cb56060860182610b11565b506080830151610cc86080860182610b11565b508091505092915050565b60006020820190508181036000830152610ced8184610c5d565b905092915050565b6000606082019050610d0a6000830186610810565b610d176020830185610810565b610d2460408301846108b5565b949350505050565b600081905092915050565b6000610d4282610a72565b610d4c8185610d2c565b9350610d5c818560208601610a8e565b80840191505092915050565b6000610d748284610d37565b915081905092915050565b60008115159050919050565b610d9481610d7f565b8114610d9f57600080fd5b50565b600081519050610db181610d8b565b92915050565b600060208284031215610dcd57610dcc61083a565b5b6000610ddb84828501610da2565b91505092915050565b600082825260208201905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b6000610e2b600383610de4565b9150610e3682610df5565b602082019050919050565b60006020820190508181036000830152610e5a81610e1e565b9050919050565b6000604082019050610e766000830185610810565b610e8360208301846108b5565b9392505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b6000610ec0600283610de4565b9150610ecb82610e8a565b602082019050919050565b60006020820190508181036000830152610eef81610eb3565b905091905056fea26469706673582212206be1382ae6a531566c16f25648f2859379fa56894becbafd0a8c24ecbad6a32d64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}